###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      29/Jan/2014  10:04:16 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\src\serial_debug.c                   #
#    Command line =  E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\src\serial_debug.c -D                #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM322xG_EVAL   #
#                    -lcN E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\Fre #
#                    eRTOS\httpserver_netconn\EWARM\STM322xG_EVAL\List\ -o    #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\STM322xG_EVAL\Obj\ --no_cse    #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\arm\INC\c\DLib_Config_Full.h" -I                     #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\inc\ -I                     #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Libraries\CMSIS\CM #
#                    3\DeviceSupport\ST\STM32F2xx\ -I                         #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Libraries\STM32F2x #
#                    x_StdPeriph_Driver\inc\ -I E:\work\ihome\spi\mcu\ihome_s #
#                    tm_021\IAR\Project\FreeRTOS\httpserver_netconn\EWARM\..\ #
#                    ..\..\..\Libraries\STM32F2x7_ETH_Driver\inc\ -I          #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\STM32_EV #
#                    AL\Common\ -I E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Pr #
#                    oject\FreeRTOS\httpserver_netconn\EWARM\..\..\..\..\Util #
#                    ities\STM32_EVAL\STM322xG_EVAL\ -I                       #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\lwip_v1.3.2\src\include\ -I                          #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\lwip_v1.3.2\src\include\lwip\ -I                     #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\lwip_v1.3.2\src\include\netif\ -I                    #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\lwip_v1.3.2\src\include\ipv4\ -I                     #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\lwip_v1.3.2\port\STM32F2x7\ -I                       #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\lwip_v1.3.2\port\STM32F2x7\FreeRTOS\ -I              #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\FreeRTOS_v7.4.2\portable\IAR\ARM_CM3\ -I             #
#                    E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\..\..\..\..\Utilities\Third_Pa #
#                    rty\FreeRTOS_v7.4.2\include\ -On --use_c++_inline -I     #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.5\arm\CMSIS\Include\"                                  #
#    List file    =  E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\STM322xG_EVAL\List\serial_debu #
#                    g.lst                                                    #
#    Object file  =  E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS #
#                    \httpserver_netconn\EWARM\STM322xG_EVAL\Obj\serial_debug #
#                    .o                                                       #
#                                                                             #
#                                                                             #
###############################################################################

E:\work\ihome\spi\mcu\ihome_stm_021\IAR\Project\FreeRTOS\httpserver_netconn\src\serial_debug.c
      1          /**
      2            ******************************************************************************
      3            * @file    serial_debug.c
      4            * @author  MCD Application Team
      5            * @version V1.1.0
      6            * @date    07-October-2011
      7            * @brief   This file provide functions to retarget the C library printf function
      8            *          to the USART. 
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     13            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     14            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     15            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     16            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     17            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     18            *
     19            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     20            ******************************************************************************
     21            */
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "stm32f2xx.h"
     25          #include "serial_debug.h"
     26          #include <stdio.h>
     27          #include "main.h"
     28          
     29          #ifdef SERIAL_DEBUG
     30          /* Private typedef -----------------------------------------------------------*/
     31          /* Private define ------------------------------------------------------------*/
     32          #ifdef __GNUC__
     33            /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
     34               set to 'Yes') calls __io_putchar() */
     35            #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
     36          #else
     37            #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
     38          #endif /* __GNUC__ */
     39          
     40          /* Private macro -------------------------------------------------------------*/
     41          /* Private variables ---------------------------------------------------------*/
     42          /* Private function prototypes -----------------------------------------------*/
     43          /* Private functions ---------------------------------------------------------*/
     44          
     45          /**
     46            * @brief  Initialize COM1 interface for serial debug
     47            * @note   COM1 interface is defined in stm3210g_eval.h file (under Utilities\STM32_EVAL\STM322xG_EVAL)  
     48            * @param  None
     49            * @retval None
     50            */
     51          void DebugComPort_Init(void)
     52          {
     53          //  USART_InitTypeDef USART_InitStructure;
     54          
     55            /* USARTx configured as follow:
     56                  - BaudRate = 115200 baud  
     57                  - Word Length = 8 Bits
     58                  - One Stop Bit
     59                  - No parity
     60                  - Hardware flow control disabled (RTS and CTS signals)
     61                  - Receive and transmit enabled
     62            */
     63            GPIO_InitTypeDef GPIO_InitStructure;
     64            USART_InitTypeDef USART_InitStructure;
     65            
     66          
     67            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
     68          
     69            RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
     70            RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
     71            RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
     72          
     73            
     74            GPIO_PinAFConfig(GPIOA, GPIO_PinSource10, GPIO_AF_USART1);		// RX
     75            GPIO_PinAFConfig(GPIOA, GPIO_PinSource9,  GPIO_AF_USART1);    	// TX
     76          
     77            // Configure USART Tx as alternate function  
     78            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
     79            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
     80            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
     81          
     82            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
     83            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     84            GPIO_Init(GPIOA, &GPIO_InitStructure);
     85          
     86            // Configure USART Rx as alternate function  
     87            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
     88            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
     89            GPIO_Init(GPIOA, &GPIO_InitStructure);
     90            
     91            
     92            USART_InitStructure.USART_BaudRate = 115200;
     93            USART_InitStructure.USART_WordLength = USART_WordLength_8b;
     94            USART_InitStructure.USART_StopBits = USART_StopBits_1;
     95            USART_InitStructure.USART_Parity = USART_Parity_No;
     96            USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
     97            USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
     98          
     99            // USART configuration 
    100            USART_Init(USART1, &USART_InitStructure);
    101              
    102            // Enable USART 
    103            USART_Cmd(USART1, ENABLE);   
    104          }
    105          
    106          /**
    107            * @brief  Retargets the C library printf function to the USART.
    108            * @param  None
    109            * @retval None
    110            */
    111          PUTCHAR_PROTOTYPE
    112          {
    113          //  /* Place your implementation of fputc here */
    114          //  /* e.g. write a character to the USART */
    115            /* Place your implementation of fputc here */
    116            /* e.g. write a character to the USART */
    117            USART_SendData(USART1, (uint8_t) ch);
    118          
    119            /* Loop until the end of transmission */
    120            while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
    121            {}
    122          
    123            return ch;
    124          }
    125          #endif /* SERIAL_DEBUG */
    126          
    127          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   DebugComPort_Init
        32   -> GPIO_Init
        32   -> GPIO_PinAFConfig
        32   -> RCC_AHB1PeriphClockCmd
        32   -> RCC_APB2PeriphClockCmd
        32   -> RCC_APB2PeriphResetCmd
        32   -> USART_Cmd
        32   -> USART_Init
      16   fputc
        16   -> USART_GetFlagStatus
        16   -> USART_SendData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
     170  DebugComPort_Init
      34  fputc

 
 212 bytes in section .text
 
 212 bytes of CODE memory

Errors: none
Warnings: none
